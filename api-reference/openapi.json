{
  "openapi": "3.0.3",
  "info": {
    "title": "Houshyar API",
    "version": "1.0.0",
    "description": "Houshyar API"
  },
  "paths": {
    "/api/v1/apps/integrations/": {
      "get": {
        "operationId": "api_v1_apps_integrations_list",
        "description": "List of integrations that belong to the user",
        "summary": "List of integrations",
        "parameters": [
          {
            "name": "agent_id",
            "required": false,
            "in": "query",
            "description": "Agent ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "tags": [
          "Apps Integrations"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Integration"
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "api_v1_apps_integrations_create",
        "description": "Create a new integration",
        "summary": "Create an integration",
        "tags": [
          "Apps Integrations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleIntegration"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SingleIntegration"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SingleIntegration"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleIntegration"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "agent_id": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "config": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "agent_id",
                        "config"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apps/integrations/{apikey}/webhook/": {
      "post": {
        "operationId": "api_v1_apps_integrations_webhook_create",
        "description": "This endpoint is used to handle webhooks that needs APIKEY for authentication",
        "summary": "Webhook handler",
        "parameters": [
          {
            "in": "path",
            "name": "apikey",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]{20,100}$"
            },
            "required": true
          }
        ],
        "tags": [
          "Apps Integrations"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "description": ""
          },
          "204": {
            "description": "No response body"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": []
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apps/integrations/{id}/": {
      "get": {
        "operationId": "api_v1_apps_integrations_retrieve",
        "description": "Details of an integration",
        "summary": "Integration details",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this integration.",
            "required": true
          }
        ],
        "tags": [
          "Apps Integrations"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleIntegration"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "api_v1_apps_integrations_destroy",
        "description": "Hard delete an integration",
        "summary": "Delete an integration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this integration.",
            "required": true
          }
        ],
        "tags": [
          "Apps Integrations"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apps/integrations/{id}/reset-api-key/": {
      "post": {
        "operationId": "api_v1_apps_integrations_reset_api_key_create",
        "description": "Reset the API key for the given Integration",
        "summary": "Reset API key",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this integration.",
            "required": true
          }
        ],
        "tags": [
          "Apps Integrations"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleIntegration"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apps/integrations/goftino/webhook/": {
      "post": {
        "operationId": "api_v1_apps_integrations_goftino_webhook_create",
        "tags": [
          "Apps Integrations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoftinoEvent"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GoftinoEvent"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/GoftinoEvent"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoftinoEvent"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "event": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "event",
                        "data"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apps/integrations/integration_schema/": {
      "get": {
        "operationId": "api_v1_apps_integrations_integration_schema_retrieve",
        "description": "Get the schema for the integration config",
        "summary": "Integration schema",
        "tags": [
          "Apps Integrations"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "example": {
                    "goftino": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "token"
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/chat/{key}/": {
      "post": {
        "operationId": "api_v1_client_chat_create",
        "description": "Create a chat with a apikey",
        "summary": "@deprecated! Create chat",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Client Chat"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Chat"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Chat"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Chat"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chat"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "query": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "conversation_id": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "query"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/{organization_pk}/project/": {
      "get": {
        "operationId": "api_v1_core_project_list",
        "parameters": [
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Core Project"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedProjectList"
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "api_v1_core_project_create",
        "parameters": [
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleProject"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SingleProject"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SingleProject"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleProject"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "description": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/{organization_pk}/project/{id}/": {
      "get": {
        "operationId": "api_v1_core_project_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleProject"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "api_v1_core_project_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleProject"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SingleProject"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SingleProject"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleProject"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "description": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "api_v1_core_project_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSingleProject"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSingleProject"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSingleProject"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleProject"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "description": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "api_v1_core_project_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/{organization_pk}/project/{project_pk}/crawl/": {
      "get": {
        "operationId": "api_v1_core_project_crawl_list",
        "parameters": [
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCrawlParentList"
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "api_v1_core_project_crawl_create",
        "parameters": [
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrawlParent"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CrawlParent"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CrawlParent"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlParent"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "crawl_status": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "crawl_type": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/{organization_pk}/project/{project_pk}/crawl/{id}/": {
      "get": {
        "operationId": "api_v1_core_project_crawl_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlParent"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "api_v1_core_project_crawl_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrawlParent"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CrawlParent"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CrawlParent"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlParent"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "crawl_status": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "crawl_type": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "api_v1_core_project_crawl_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCrawlParent"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCrawlParent"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCrawlParent"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlParent"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "crawl_status": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "crawl_type": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "api_v1_core_project_crawl_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/{organization_pk}/project/{project_pk}/crawl/parent/{id}/": {
      "delete": {
        "operationId": "api_v1_core_project_crawl_parent_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/{organization_pk}/project/{project_pk}/file/": {
      "get": {
        "operationId": "api_v1_core_project_file_list",
        "parameters": [
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "api_v1_core_project_file_create",
        "parameters": [
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleFile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SingleFile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SingleFile"
              }
            },
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/SingleFile"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleFile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "file_type": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "file": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "directory_id": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "file_type",
                        "file"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/{organization_pk}/project/{project_pk}/file/{id}/": {
      "get": {
        "operationId": "api_v1_core_project_file_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleFile"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "api_v1_core_project_file_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleFile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SingleFile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SingleFile"
              }
            },
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/SingleFile"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleFile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "file_type": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "file": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "directory_id": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "file_type",
                        "file"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "api_v1_core_project_file_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSingleFile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSingleFile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSingleFile"
              }
            },
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSingleFile"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleFile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "file_type": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "file": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "directory_id": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "file_type",
                        "file"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "api_v1_core_project_file_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/{organization_pk}/project/{project_pk}/sops_docs/{id}/": {
      "get": {
        "operationId": "api_v1_core_project_sops_docs_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SopsAndDocs"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "api_v1_core_project_sops_docs_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SopsAndDocs"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SopsAndDocs"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SopsAndDocs"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SopsAndDocs"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "description": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "api_v1_core_project_sops_docs_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "organization_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "project_pk",
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSopsAndDocs"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSopsAndDocs"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSopsAndDocs"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SopsAndDocs"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "description": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/categories/": {
      "get": {
        "operationId": "api_v1_core_categories_list",
        "tags": [
          "Core Categories"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/categories/{id}/": {
      "get": {
        "operationId": "api_v1_core_categories_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this category.",
            "required": true
          }
        ],
        "tags": [
          "Core Categories"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/conversations/": {
      "get": {
        "operationId": "api_v1_core_conversations_list",
        "description": "List all conversations for the authenticated user.",
        "summary": "List all conversations for the authenticated user.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Core Conversations"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedConversationList"
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/conversations/{conversation_id}/": {
      "delete": {
        "operationId": "api_v1_core_conversations_destroy",
        "description": "Mark a conversation as deleted. Conversation is not physically deleted but hidden from the user.",
        "summary": "Delete a specific conversation by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "conversation_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Conversations"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/conversations/{conversation_id}/pin/": {
      "post": {
        "operationId": "api_v1_core_conversations_pin_create",
        "description": "Pin a conversation to the top of the list.",
        "summary": "Pin a specific conversation by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "conversation_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Conversations"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/conversations/{conversation_id}/rename/": {
      "post": {
        "operationId": "api_v1_core_conversations_rename_create",
        "parameters": [
          {
            "in": "path",
            "name": "conversation_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Conversations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Conversation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Conversation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Conversation"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "conversation_id": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "user": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "is_deleted": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "pinned": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "status": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "introduction": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "inputs": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "user"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/conversations/{conversation_id}/unpin/": {
      "post": {
        "operationId": "api_v1_core_conversations_unpin_create",
        "description": "Unpin a conversation from the top of the list.",
        "summary": "Unpin a specific conversation by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "conversation_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Conversations"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/favorite/": {
      "get": {
        "operationId": "api_v1_core_favorite_list",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Core Favorite"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFavoriteRagList"
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/favorite/favorite-pricing/": {
      "get": {
        "operationId": "api_v1_core_favorite_favorite_pricing_retrieve",
        "tags": [
          "Core Favorite"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteRag"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/organization/": {
      "get": {
        "operationId": "api_v1_core_organization_list",
        "tags": [
          "Core Organization"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "api_v1_core_organization_create",
        "tags": [
          "Core Organization"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/organization/{id}/": {
      "get": {
        "operationId": "api_v1_core_organization_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this organization.",
            "required": true
          }
        ],
        "tags": [
          "Core Organization"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/": {
      "get": {
        "operationId": "api_v1_core_rag_list",
        "description": "List all Agents for the authenticated user.",
        "summary": "List all Agents",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRagList"
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "api_v1_core_rag_create",
        "description": "Create an Agent",
        "summary": "Create an Agent",
        "tags": [
          "Core Rag"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleRag"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SingleRag"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SingleRag"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleRag"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "type": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "llm_provider": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "tools": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "project": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "description": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "about_project": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "tone_of_voice": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "config": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "opener": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/{agent_pk}/chat-messages": {
      "post": {
        "operationId": "api_v1_core_rag_chat_messages_create",
        "parameters": [
          {
            "in": "path",
            "name": "agent_pk",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/{agent_pk}/chat-messages/{task_id}/stop": {
      "post": {
        "operationId": "api_v1_core_rag_chat_messages_stop_create",
        "parameters": [
          {
            "in": "path",
            "name": "agent_pk",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "task_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/{agent_pk}/conversations/{conversation_id}/name": {
      "post": {
        "operationId": "api_v1_core_rag_conversations_name_create",
        "parameters": [
          {
            "in": "path",
            "name": "agent_pk",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "conversation_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/{agent_pk}/file/upload": {
      "post": {
        "operationId": "api_v1_core_rag_file_upload_create",
        "description": "Upload a file (image or text) for inline usage in messages.",
        "parameters": [
          {
            "in": "path",
            "name": "agent_pk",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/{agent_pk}/messages": {
      "get": {
        "operationId": "api_v1_core_rag_messages_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_pk",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/{agent_pk}/messages/{message_id}/feedbacks": {
      "post": {
        "operationId": "api_v1_core_rag_messages_feedbacks_create",
        "parameters": [
          {
            "in": "path",
            "name": "agent_pk",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "message_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/{agent_pk}/meta": {
      "get": {
        "operationId": "api_v1_core_rag_meta_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_pk",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/{agent_pk}/parameters": {
      "get": {
        "operationId": "api_v1_core_rag_parameters_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_pk",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/{agent_pk}/site": {
      "get": {
        "operationId": "api_v1_core_rag_site_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_pk",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/{rag_pk}/": {
      "get": {
        "operationId": "api_v1_core_rag_retrieve",
        "description": "Retrieve an Agent with the given id",
        "summary": "Retrieve an Agent",
        "parameters": [
          {
            "in": "path",
            "name": "rag_pk",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this rag.",
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RagRetrieve"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "api_v1_core_rag_update",
        "description": "Update an Agent",
        "summary": "Update an Agent",
        "parameters": [
          {
            "in": "path",
            "name": "rag_pk",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this rag.",
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleRag"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SingleRag"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SingleRag"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleRag"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "type": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "llm_provider": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "tools": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "project": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "description": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "about_project": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "tone_of_voice": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "config": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "opener": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "api_v1_core_rag_partial_update",
        "description": "Partial Update an Agent",
        "summary": "Partial Update an Agent",
        "parameters": [
          {
            "in": "path",
            "name": "rag_pk",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this rag.",
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSingleRag"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSingleRag"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSingleRag"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleRag"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "type": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "llm_provider": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "tools": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "project": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "description": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "about_project": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "tone_of_voice": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "config": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "opener": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "api_v1_core_rag_destroy",
        "description": "Delete an Agent",
        "summary": "Delete an Agent",
        "parameters": [
          {
            "in": "path",
            "name": "rag_pk",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this rag.",
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/{rag_pk}/text_to_audio": {
      "post": {
        "operationId": "api_v1_core_rag_text_to_audio_create",
        "parameters": [
          {
            "in": "path",
            "name": "rag_pk",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextToAudio"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TextToAudio"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TextToAudio"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextToAudio"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "message_id": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "text": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "message_id",
                        "text"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/allowed-rags/": {
      "get": {
        "operationId": "api_v1_core_rag_allowed_rags_retrieve",
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleRag"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/prompt-enhancer/": {
      "post": {
        "operationId": "api_v1_core_rag_prompt_enhancer_create",
        "tags": [
          "Core Rag"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptEnhancer"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PromptEnhancer"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PromptEnhancer"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptEnhancer"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "prompt": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "prompt"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/rag/sample-prompts/{agent_pk}": {
      "get": {
        "operationId": "api_v1_core_rag_sample_prompts_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_pk",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Rag"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}": {
      "get": {
        "operationId": "api_v1_core_workflow_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/advanced-chat/draft/run": {
      "post": {
        "operationId": "api_v1_core_workflow_advanced_chat_draft_run_create",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/advanced-chat/workflow-runs": {
      "get": {
        "operationId": "api_v1_core_workflow_advanced_chat_workflow_runs_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/chat-messages": {
      "get": {
        "operationId": "api_v1_core_workflow_chat_messages_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/chat-messages/{message_uuid}/stop": {
      "post": {
        "operationId": "api_v1_core_workflow_chat_messages_stop_create",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "message_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/chat-messages/{message_uuid}/suggested-questions": {
      "get": {
        "operationId": "api_v1_core_workflow_chat_messages_suggested_questions_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "message_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/default-workflow-block-configs": {
      "get": {
        "operationId": "api_v1_core_workflow_default_workflow_block_configs_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/default-workflow-block-configs/code": {
      "get": {
        "operationId": "api_v1_core_workflow_default_workflow_block_configs_code_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/draft": {
      "get": {
        "operationId": "api_v1_core_workflow_draft_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowDraft"
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "api_v1_core_workflow_draft_create",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowDraft"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowDraft"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowDraft"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowDraft"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "graph": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "environment_variables": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "conversation_variables": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "hash": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "graph",
                        "features"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/draft/config": {
      "get": {
        "operationId": "api_v1_core_workflow_draft_config_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/draft/nodes/{node_id}/run": {
      "post": {
        "operationId": "api_v1_core_workflow_draft_nodes_run_create",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "node_id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/draft/nodes/llm/run": {
      "post": {
        "operationId": "api_v1_core_workflow_draft_nodes_llm_run_create",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/export": {
      "get": {
        "operationId": "api_v1_core_workflow_export_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/publish": {
      "get": {
        "operationId": "api_v1_core_workflow_publish_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "api_v1_core_workflow_publish_create",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/workflow-runs/{run_uuid}": {
      "get": {
        "operationId": "api_v1_core_workflow_workflow_runs_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "run_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/{agent_uuid}/workflow-runs/{run_uuid}/node-executions": {
      "get": {
        "operationId": "api_v1_core_workflow_workflow_runs_node_executions_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "agent_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "run_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/agent-provider/langgenius/agent/agent": {
      "get": {
        "operationId": "api_v1_core_workflow_agent_provider_langgenius_agent_agent_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/agent-providers": {
      "get": {
        "operationId": "api_v1_core_workflow_agent_providers_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/api-based-extension": {
      "get": {
        "operationId": "api_v1_core_workflow_api_based_extension_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/code-based-extension": {
      "get": {
        "operationId": "api_v1_core_workflow_code_based_extension_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/datasets": {
      "get": {
        "operationId": "api_v1_core_workflow_datasets_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/datasets/retrieval-setting": {
      "get": {
        "operationId": "api_v1_core_workflow_datasets_retrieval_setting_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/default-model": {
      "get": {
        "operationId": "api_v1_core_workflow_default_model_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/features": {
      "get": {
        "operationId": "api_v1_core_workflow_features_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/files/support-type": {
      "get": {
        "operationId": "api_v1_core_workflow_files_support_type_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/files/upload": {
      "get": {
        "operationId": "api_v1_core_workflow_files_upload_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/marketplace/plugins/{provider_path}": {
      "get": {
        "operationId": "api_v1_core_workflow_marketplace_plugins_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "provider_path",
            "schema": {
              "type": "string",
              "pattern": "^.+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "api_v1_core_workflow_marketplace_plugins_create",
        "parameters": [
          {
            "in": "path",
            "name": "provider_path",
            "schema": {
              "type": "string",
              "pattern": "^.+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/model-providers": {
      "get": {
        "operationId": "api_v1_core_workflow_model_providers_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/model-providers/{provider_path}/models": {
      "get": {
        "operationId": "api_v1_core_workflow_model_providers_models_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "provider_path",
            "schema": {
              "type": "string",
              "pattern": "^.+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/model-providers/{provider_path}/models/parameter-rules": {
      "get": {
        "operationId": "api_v1_core_workflow_model_providers_models_parameter_rules_retrieve_2",
        "parameters": [
          {
            "in": "path",
            "name": "provider_path",
            "schema": {
              "type": "string",
              "pattern": "^.+$"
            },
            "required": true
          }
        ],
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/model-providers/models/parameter-rules": {
      "get": {
        "operationId": "api_v1_core_workflow_model_providers_models_parameter_rules_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/models/model-types/llm": {
      "get": {
        "operationId": "api_v1_core_workflow_models_model_types_llm_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/models/model-types/moderation": {
      "get": {
        "operationId": "api_v1_core_workflow_models_model_types_moderation_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/models/model-types/rerank": {
      "get": {
        "operationId": "api_v1_core_workflow_models_model_types_rerank_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/models/model-types/speech2text": {
      "get": {
        "operationId": "api_v1_core_workflow_models_model_types_speech2text_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/models/model-types/text-embedding": {
      "get": {
        "operationId": "api_v1_core_workflow_models_model_types_text_embedding_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/models/model-types/tts": {
      "get": {
        "operationId": "api_v1_core_workflow_models_model_types_tts_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/plugin/icon": {
      "get": {
        "operationId": "api_v1_core_workflow_plugin_icon_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/plugin/list": {
      "get": {
        "operationId": "api_v1_core_workflow_plugin_list_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/plugin/list/installations/ids": {
      "post": {
        "operationId": "api_v1_core_workflow_plugin_list_installations_ids_create",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/plugin/permission/fetch": {
      "get": {
        "operationId": "api_v1_core_workflow_plugin_permission_fetch_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/plugin/tasks": {
      "get": {
        "operationId": "api_v1_core_workflow_plugin_tasks_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/rule-generate": {
      "post": {
        "operationId": "api_v1_core_workflow_rule_generate_create",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/tools/api": {
      "get": {
        "operationId": "api_v1_core_workflow_tools_api_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/tools/builtin": {
      "get": {
        "operationId": "api_v1_core_workflow_tools_builtin_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/core/workflow/tools/workflow": {
      "get": {
        "operationId": "api_v1_core_workflow_tools_workflow_retrieve",
        "tags": [
          "Core Workflow"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/llm-provider/llm/": {
      "get": {
        "operationId": "api_v1_llm_provider_llm_retrieve",
        "tags": [
          "Llm-Provider Llm"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMProvider"
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/llm-provider/llm/config/{llm_uuid}/": {
      "get": {
        "operationId": "api_v1_llm_provider_llm_config_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "llm_uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Llm-Provider Llm"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/llm-provider/tool/": {
      "get": {
        "operationId": "api_v1_llm_provider_tool_retrieve",
        "tags": [
          "Llm-Provider Tool"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media_generator/image_to_video/": {
      "post": {
        "operationId": "api_v1_media_generator_image_to_video_create",
        "description": "Generate a video from an image",
        "summary": "Generate Video from Image",
        "tags": [
          "Media_Generator Image_To_Video"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserServiceHistory"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserServiceHistory"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleUserServiceHistory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "model_version": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "prompt": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "input_file": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "output_file": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "schema": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "model_version",
                        "prompt",
                        "schema"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media_generator/model_version/": {
      "get": {
        "operationId": "api_v1_media_generator_model_version_list",
        "description": "Retrieve a list of model versions",
        "summary": "List Model Versions",
        "tags": [
          "Media_Generator Model_Version"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelVersion"
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media_generator/model_version/{id}/get_schema/": {
      "get": {
        "operationId": "api_v1_media_generator_model_version_get_schema_retrieve",
        "description": "Retrieve the schema of a specific model version",
        "summary": "Model Version Schema",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this model version.",
            "required": true
          }
        ],
        "tags": [
          "Media_Generator Model_Version"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media_generator/usage_history/": {
      "get": {
        "operationId": "api_v1_media_generator_usage_history_list",
        "description": "Retrieve the history of user services",
        "summary": "User History List",
        "tags": [
          "Media_Generator Usage_History"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserServiceHistory"
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media_generator/usage_history/{id}/": {
      "get": {
        "operationId": "api_v1_media_generator_usage_history_retrieve",
        "description": "Retrieve details of a specific user history record",
        "summary": "User History Details",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this user service history.",
            "required": true
          }
        ],
        "tags": [
          "Media_Generator Usage_History"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserServiceHistory"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/set-language/": {
      "post": {
        "operationId": "api_v1_set_language_create",
        "tags": [
          "Set-Language"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stabilityai/control/structure/{uuid}/": {
      "post": {
        "operationId": "api_v1_stabilityai_control_structure_create",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Stabilityai Control"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PromptImageBaseService"
              }
            },
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/PromptImageBaseService"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptImageBaseService"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "image": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "prompt": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "output_format": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "image",
                        "prompt",
                        "output_format"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stabilityai/control/style/{uuid}/": {
      "post": {
        "operationId": "api_v1_stabilityai_control_style_create",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Stabilityai Control"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PromptImageBaseService"
              }
            },
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/PromptImageBaseService"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptImageBaseService"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "image": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "prompt": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "output_format": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "image",
                        "prompt",
                        "output_format"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stabilityai/edit/remove-background/{uuid}/": {
      "post": {
        "operationId": "api_v1_stabilityai_edit_remove_background_create",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Stabilityai Edit"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ImageBaseService"
              }
            },
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/ImageBaseService"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageBaseService"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "image": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "output_format": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "image",
                        "output_format"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stabilityai/edit/search-and-recolor/{uuid}/": {
      "post": {
        "operationId": "api_v1_stabilityai_edit_search_and_recolor_create",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Stabilityai Edit"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SearchAndRecolorImage"
              }
            },
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/SearchAndRecolorImage"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAndRecolorImage"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "image": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "prompt": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "output_format": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "select_prompt": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "image",
                        "prompt",
                        "output_format",
                        "select_prompt"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stabilityai/edit/search-and-replace/{uuid}/": {
      "post": {
        "operationId": "api_v1_stabilityai_edit_search_and_replace_create",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Stabilityai Edit"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SearchAndReplaceImage"
              }
            },
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/SearchAndReplaceImage"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAndReplaceImage"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "image": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "prompt": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "output_format": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "search_prompt": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "image",
                        "prompt",
                        "output_format",
                        "search_prompt"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stabilityai/generate/core/{uuid}/": {
      "post": {
        "operationId": "api_v1_stabilityai_generate_core_create",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Stabilityai Generate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptBaseService"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PromptBaseService"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PromptBaseService"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptBaseService"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "prompt": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "output_format": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "prompt",
                        "output_format"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stabilityai/generate/diffusion/{uuid}/": {
      "post": {
        "operationId": "api_v1_stabilityai_generate_diffusion_create",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Stabilityai Generate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptBaseService"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PromptBaseService"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PromptBaseService"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptBaseService"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "prompt": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "output_format": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "prompt",
                        "output_format"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stabilityai/generate/ultra/{uuid}/": {
      "post": {
        "operationId": "api_v1_stabilityai_generate_ultra_create",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Stabilityai Generate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptBaseService"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PromptBaseService"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PromptBaseService"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptBaseService"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "prompt": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "output_format": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "prompt",
                        "output_format"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stabilityai/services/": {
      "get": {
        "operationId": "api_v1_stabilityai_services_list",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Stabilityai Services"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedServiceList"
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stabilityai/services/{uuid}/": {
      "get": {
        "operationId": "api_v1_stabilityai_services_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Stabilityai Services"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stabilityai/user/history/": {
      "get": {
        "operationId": "api_v1_stabilityai_user_history_list",
        "tags": [
          "Stabilityai User"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserServiceHistory"
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stabilityai/user/history/{id}/": {
      "delete": {
        "operationId": "api_v1_stabilityai_user_history_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this user service history.",
            "required": true
          }
        ],
        "tags": [
          "Stabilityai User"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wallet/balance/": {
      "get": {
        "operationId": "api_v1_wallet_balance_retrieve",
        "tags": [
          "Wallet Balance"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wallet/convert/houshyar-to-toman/": {
      "post": {
        "operationId": "api_v1_wallet_convert_houshyar_to_toman_create",
        "tags": [
          "Wallet Convert"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversionCalculation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ConversionCalculation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ConversionCalculation"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversionCalculation"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": []
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wallet/convert/toman-to-houshyar/": {
      "post": {
        "operationId": "api_v1_wallet_convert_toman_to_houshyar_create",
        "tags": [
          "Wallet Convert"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversionCalculation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ConversionCalculation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ConversionCalculation"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversionCalculation"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": []
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wallet/plans/": {
      "get": {
        "operationId": "api_v1_wallet_plans_list",
        "tags": [
          "Wallet Plans"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wallet/transaction/": {
      "post": {
        "operationId": "api_v1_wallet_transaction_create",
        "tags": [
          "Wallet Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleTransaction"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SingleTransaction"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SingleTransaction"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleTransaction"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "payment_method": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "transaction_type": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "plan_name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "promotion_code": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "amount": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "payment_method",
                        "transaction_type",
                        "plan_name"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wallet/transaction/{uuid}/payment-verify/": {
      "get": {
        "operationId": "api_v1_wallet_transaction_payment_verify_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Wallet Transaction"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleTransaction"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wallet/transaction/promotion-code-verify/": {
      "post": {
        "operationId": "api_v1_wallet_transaction_promotion_code_verify_create",
        "tags": [
          "Wallet Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleTransaction"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SingleTransaction"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SingleTransaction"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleTransaction"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "payment_method": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "transaction_type": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "plan_name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "promotion_code": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "amount": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "payment_method",
                        "transaction_type",
                        "plan_name"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wallet/user-subscriptions/": {
      "get": {
        "operationId": "api_v1_wallet_user_subscriptions_list",
        "tags": [
          "Wallet User-Subscriptions"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscription"
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wallet/user-subscriptions/activate-reserved-subscription/": {
      "post": {
        "operationId": "api_v1_wallet_user_subscriptions_activate_reserved_subscription_create",
        "tags": [
          "Wallet User-Subscriptions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSubscription"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserSubscription"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserSubscription"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSubscription"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "plan_name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "fa_name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "plan_type": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "expired": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "is_reserved": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "end_date": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "total_basic_credit": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "total_advanced_credit": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "description": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "plan_name",
                        "fa_name",
                        "plan_type",
                        "total_basic_credit",
                        "total_advanced_credit",
                        "description"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user/auth/{temp_code}/": {
      "get": {
        "operationId": "api_v2_user_auth_retrieve",
        "description": "With this endpoint you can retrieve current user authentication process",
        "summary": "Retrieve current user authentication process",
        "parameters": [
          {
            "in": "path",
            "name": "temp_code",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "User Auth"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authenticator"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user/auth/{temp_code}/login-with-password/": {
      "post": {
        "operationId": "api_v2_user_auth_login_with_password_create",
        "description": "Login with password",
        "summary": "Login with password",
        "parameters": [
          {
            "in": "path",
            "name": "temp_code",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "User Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Password"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Password"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Password"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "password": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "password"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user/auth/{temp_code}/request-code/": {
      "post": {
        "operationId": "api_v2_user_auth_request_code_create",
        "description": "You can call this endpoint to request a new verification code. This endpoint will send a new code to Email/Phone that you have provided in start login process",
        "summary": "Request verification code",
        "parameters": [
          {
            "in": "path",
            "name": "temp_code",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "User Auth"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authenticator"
                }
              }
            },
            "description": ""
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user/auth/{temp_code}/verify/": {
      "post": {
        "operationId": "api_v2_user_auth_verify_create",
        "description": "Verify user authentication code. You can try 3 times",
        "summary": "Verify user authentication code",
        "parameters": [
          {
            "in": "path",
            "name": "temp_code",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "User Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Verify"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Verify"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Verify"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "code"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user/auth/google/": {
      "post": {
        "operationId": "api_v2_user_auth_google_create",
        "description": "Sign in with Google",
        "summary": "Sign in with Google",
        "tags": [
          "User Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleSignIn"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GoogleSignIn"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/GoogleSignIn"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "new_user": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "access_token"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user/auth/start-login/": {
      "post": {
        "operationId": "api_v2_user_auth_start_login_create",
        "description": "Start login with cellphone number and send a code to user",
        "summary": "Start login process",
        "tags": [
          "User Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartLogin"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/StartLogin"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StartLogin"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authenticator"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "utm_source": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "utm_medium": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "referral_code": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "g_recaptcha_response": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "username"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Not found."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user/profile/": {
      "get": {
        "operationId": "api_v2_user_profile_retrieve",
        "description": "Get current user profile",
        "summary": "Get current user profile",
        "tags": [
          "User Profile"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "api_v2_user_profile_update",
        "description": "Update current user profile",
        "summary": "Update current user profile",
        "tags": [
          "User Profile"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "first_name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "last_name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "avatar": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": []
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "api_v2_user_profile_partial_update",
        "description": "Update current user profile",
        "summary": "Update current user profile",
        "tags": [
          "User Profile"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedProfile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedProfile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedProfile"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "first_name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "last_name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "avatar": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": []
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user/profile/change-password/": {
      "patch": {
        "operationId": "api_v2_user_profile_change_password_partial_update",
        "description": "Set a new password for current user",
        "summary": "Set a new password",
        "tags": [
          "User Profile"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPassword"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPassword"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPassword"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "password": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "password"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user/referral-code/": {
      "get": {
        "operationId": "api_v2_user_referral_code_list",
        "tags": [
          "User Referral-Code"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReferralCode"
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "api_v2_user_referral_code_create",
        "tags": [
          "User Referral-Code"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferralCode"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ReferralCode"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ReferralCode"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralCode"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "Invalid input data."
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "usage_count": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "total_basic_credit": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "total_advanced_credit": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "The error message."
                          ]
                        },
                        "non_field_errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "In the case of errors that are not related to a specific field."
                          ]
                        }
                      },
                      "required": [
                        "total_basic_credit",
                        "total_advanced_credit"
                      ]
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/{image_path}": {
      "get": {
        "operationId": "files_retrieve",
        "description": "Retrieve image files from Dify storage (use this when fetching uploaded or created messages).",
        "parameters": [
          {
            "in": "path",
            "name": "image_path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "Files"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {
            "cookieAuth": []
          },
          {
            "ApiKeyAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message:": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    },
                    "errors": {
                      "type": "object",
                      "example": null
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Authenticator": {
        "type": "object",
        "properties": {
          "temp_code": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Username or Email or Cellphone",
            "maxLength": 150
          },
          "username_type": {
            "$ref": "#/components/schemas/UsernameTypeEnum"
          },
          "is_verified": {
            "type": "boolean"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "is_registered": {
            "type": "string",
            "readOnly": true
          },
          "has_password": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "expires_at",
          "has_password",
          "is_registered",
          "temp_code",
          "username",
          "username_type"
        ]
      },
      "BlankEnum": {
        "enum": [
          ""
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "type": "string",
            "pattern": "^[-\\w]+$",
            "maxLength": 100
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "CategoryEnum": {
        "enum": [
          "enhancer",
          "translator",
          "favorite"
        ],
        "type": "string",
        "description": "* `enhancer` - Enhancer\n* `translator` - Translator\n* `favorite` - Favorite"
      },
      "Chat": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "writeOnly": true
          },
          "conversation_id": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "query"
        ]
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "conversation_id": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "type": "integer"
          },
          "rag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Rag"
              }
            ],
            "readOnly": true
          },
          "is_deleted": {
            "type": "boolean"
          },
          "pinned": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "status": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "introduction": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "inputs": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "rag",
          "updated_at",
          "user"
        ]
      },
      "ConversionCalculation": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "minimum": 0,
            "default": 0
          }
        }
      },
      "CrawlParent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "maxLength": 400
          },
          "crawl_status": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlStatusEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "crawl_type": {
            "$ref": "#/components/schemas/CrawlTypeEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "id",
          "updated_at",
          "url"
        ]
      },
      "CrawlStatusEnum": {
        "enum": [
          "crawling",
          "crawled",
          "failed",
          "pending"
        ],
        "type": "string",
        "description": "* `crawling` - Crawling\n* `crawled` - Crawled\n* `failed` - Failed\n* `pending` - Pending"
      },
      "CrawlTypeEnum": {
        "enum": [
          "project",
          "sops_&_docs"
        ],
        "type": "string",
        "description": "* `project` - Project\n* `sops_&_docs` - Sops & Docs"
      },
      "Directory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "id",
          "name",
          "uuid"
        ]
      },
      "FavoriteRag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "image": {
            "type": "string",
            "format": "uri"
          },
          "llm_name": {
            "type": "string",
            "readOnly": true
          },
          "llm_logo": {
            "type": "string",
            "format": "uri",
            "readOnly": true
          },
          "llm_provider": {
            "type": "integer",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "is_default": {
            "type": "boolean"
          },
          "is_favorite": {
            "type": "boolean"
          },
          "credit_type": {
            "type": "string",
            "readOnly": true
          },
          "amount": {
            "type": "integer",
            "readOnly": true
          },
          "provider": {
            "type": "string",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        },
        "required": [
          "amount",
          "credit_type",
          "id",
          "llm_logo",
          "llm_name",
          "name",
          "provider",
          "tags"
        ]
      },
      "File": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "file_type": {
            "$ref": "#/components/schemas/FileTypeEnum"
          },
          "file_size": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "file_size",
          "file_type",
          "id",
          "name",
          "uuid"
        ]
      },
      "FileTypeEnum": {
        "enum": [
          "sops_&_docs",
          "project",
          "greeting",
          "goodbye",
          "crawl"
        ],
        "type": "string",
        "description": "* `sops_&_docs` - Sops & Docs\n* `project` - Project Description\n* `greeting` - Greeting\n* `goodbye` - Goodbye\n* `crawl` - crawl"
      },
      "GoftinoEvent": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "data",
          "event"
        ]
      },
      "GoogleSignIn": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "minLength": 6
          }
        },
        "required": [
          "access_token"
        ]
      },
      "Graph": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "edges": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "viewport": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "ImageBaseService": {
        "type": "object",
        "description": "fields = ('image', 'output_format')",
        "properties": {
          "image": {
            "type": "string",
            "format": "uri"
          },
          "output_format": {
            "type": "string"
          }
        },
        "required": [
          "image",
          "output_format"
        ]
      },
      "Integration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "$ref": "#/components/schemas/NameEnum"
          },
          "api_link": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "api_link",
          "id",
          "name"
        ]
      },
      "LLMProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "enable_tools": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "display_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "readOnly": true
          },
          "is_active": {
            "type": "boolean",
            "readOnly": true
          },
          "default": {
            "type": "boolean"
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "provider": {
            "type": "string",
            "readOnly": true
          },
          "deprecated": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "is_allowed": {
            "type": "boolean",
            "readOnly": true
          },
          "credit_type": {
            "type": "string",
            "readOnly": true
          },
          "amount": {
            "type": "integer",
            "readOnly": true
          }
        },
        "required": [
          "amount",
          "created_at",
          "credit_type",
          "description",
          "enable_tools",
          "id",
          "is_active",
          "is_allowed",
          "logo",
          "name",
          "provider",
          "slug",
          "updated_at",
          "uuid"
        ]
      },
      "ModelVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "display_name": {
            "type": "string",
            "maxLength": 100
          },
          "provider": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        },
        "required": [
          "category",
          "display_name",
          "id",
          "provider"
        ]
      },
      "NameEnum": {
        "enum": [
          "goftino",
          "direct_chat"
        ],
        "type": "string",
        "description": "* `goftino` - Goftino\n* `direct_chat` - Direct Chat"
      },
      "NullEnum": {
        "enum": [
          null
        ]
      },
      "Opener": {
        "type": "object",
        "properties": {
          "main_question": {
            "type": "string",
            "default": ""
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 5
          }
        },
        "required": [
          "options"
        ]
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "is_super_user": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "is_super_user",
          "name"
        ]
      },
      "PaginatedConversationList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Conversation"
        }
      },
      "PaginatedCrawlParentList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrawlParent"
            }
          }
        }
      },
      "PaginatedFavoriteRagList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FavoriteRag"
            }
          }
        }
      },
      "PaginatedProjectList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Project"
        }
      },
      "PaginatedRagList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Rag"
        }
      },
      "PaginatedServiceList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Service"
        }
      },
      "Password": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password"
        ]
      },
      "PatchedCrawlParent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "maxLength": 400
          },
          "crawl_status": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlStatusEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "crawl_type": {
            "$ref": "#/components/schemas/CrawlTypeEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "PatchedPassword": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "PatchedProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "readOnly": true
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true,
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "format": "uri"
          },
          "is_active": {
            "type": "boolean",
            "readOnly": true
          },
          "is_b2b": {
            "type": "boolean",
            "readOnly": true
          },
          "workflow_enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "is_video_user": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "PatchedSingleFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "file_type": {
            "$ref": "#/components/schemas/FileTypeEnum"
          },
          "file": {
            "type": "string",
            "format": "uri"
          },
          "file_size": {
            "type": "string",
            "readOnly": true
          },
          "project": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Project"
              }
            ],
            "readOnly": true
          },
          "directory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Directory"
              }
            ],
            "readOnly": true
          },
          "directory_id": {
            "type": "integer",
            "writeOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "PatchedSingleProject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "_crawls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SingleCrawl"
            },
            "readOnly": true,
            "default": [],
            "title": " crawls"
          },
          "description_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File"
            },
            "readOnly": true
          },
          "general_info": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "PatchedSingleRag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "llm_provider": {
            "type": "string",
            "format": "uuid"
          },
          "tools": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "project": {
            "type": "integer",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "about_project": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          },
          "tone_of_voice": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "opener": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Opener"
              }
            ],
            "writeOnly": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "PatchedSopsAndDocs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "crawls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrawlParent"
            },
            "readOnly": true,
            "default": []
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File"
            },
            "readOnly": true
          }
        }
      },
      "Plan": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "fa_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "toman": {
            "type": "string",
            "readOnly": true
          },
          "discounted_toman": {
            "type": "string",
            "readOnly": true
          },
          "discount_percentage": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "price_after_discount": {
            "type": "string",
            "readOnly": true
          },
          "dollar": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
          },
          "discounted_dollar": {
            "type": "string",
            "readOnly": true
          },
          "price_after_discount_dollar": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
          },
          "basic_credit": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "advanced_credit": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "duration": {
            "type": "string",
            "readOnly": true
          },
          "is_popular": {
            "type": "boolean"
          },
          "has_referral_discount": {
            "type": "boolean"
          }
        },
        "required": [
          "description",
          "discounted_dollar",
          "discounted_toman",
          "duration",
          "fa_name",
          "has_referral_discount",
          "name",
          "price_after_discount",
          "toman"
        ]
      },
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "readOnly": true
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true,
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "format": "uri"
          },
          "is_active": {
            "type": "boolean",
            "readOnly": true
          },
          "is_b2b": {
            "type": "boolean",
            "readOnly": true
          },
          "workflow_enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "is_video_user": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "email",
          "id",
          "is_active",
          "is_b2b",
          "is_video_user",
          "username",
          "workflow_enabled"
        ]
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "id",
          "name"
        ]
      },
      "PromptBaseService": {
        "type": "object",
        "description": "fields = ('prompt', 'output_format')",
        "properties": {
          "prompt": {
            "type": "string"
          },
          "output_format": {
            "type": "string"
          }
        },
        "required": [
          "output_format",
          "prompt"
        ]
      },
      "PromptEnhancer": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string"
          }
        },
        "required": [
          "prompt"
        ]
      },
      "PromptImageBaseService": {
        "type": "object",
        "description": "fields = ('prompt', 'image', 'output_format')",
        "properties": {
          "image": {
            "type": "string",
            "format": "uri"
          },
          "prompt": {
            "type": "string"
          },
          "output_format": {
            "type": "string"
          }
        },
        "required": [
          "image",
          "output_format",
          "prompt"
        ]
      },
      "Rag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "image": {
            "type": "string",
            "format": "uri"
          },
          "favicon": {
            "type": "string",
            "format": "uri"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_favorite": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "category": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CategoryEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "llm_description": {
            "type": "string",
            "readOnly": true
          },
          "llm_logo": {
            "type": "string",
            "readOnly": true
          },
          "llm_deprecated": {
            "type": "string",
            "readOnly": true
          },
          "llm_name": {
            "type": "string",
            "readOnly": true
          },
          "tools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tool"
            },
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "config": {
            "type": "string",
            "readOnly": true
          },
          "opener": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "default": "ready"
          },
          "credit_type": {
            "type": "string",
            "readOnly": true
          },
          "amount": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "amount",
          "config",
          "created_at",
          "credit_type",
          "id",
          "llm_deprecated",
          "llm_description",
          "llm_logo",
          "llm_name",
          "name",
          "opener",
          "status",
          "tools",
          "uuid"
        ]
      },
      "RagRetrieve": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "logo": {
            "type": "string",
            "format": "uri"
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "default": "ready"
          },
          "project": {
            "type": "integer",
            "nullable": true
          },
          "llm_name": {
            "type": "string",
            "readOnly": true
          },
          "llm_logo": {
            "type": "string",
            "format": "uri",
            "readOnly": true
          },
          "llm_provider": {
            "type": "integer",
            "nullable": true
          },
          "tools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleTool"
            },
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "is_default": {
            "type": "boolean"
          },
          "is_favorite": {
            "type": "boolean"
          },
          "files": {
            "type": "string",
            "readOnly": true
          },
          "crawls": {
            "type": "string",
            "readOnly": true
          },
          "opener": {
            "type": "string",
            "readOnly": true
          },
          "config": {
            "type": "string",
            "readOnly": true
          },
          "category": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CategoryEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "credit_type": {
            "type": "string",
            "readOnly": true
          },
          "amount": {
            "type": "string",
            "readOnly": true
          },
          "provider": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "amount",
          "config",
          "crawls",
          "credit_type",
          "files",
          "id",
          "llm_logo",
          "llm_name",
          "logo",
          "name",
          "opener",
          "provider",
          "status",
          "tools"
        ]
      },
      "ReferralCode": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string",
            "readOnly": true
          },
          "usage_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "total_basic_credit": {
            "type": "integer"
          },
          "total_advanced_credit": {
            "type": "integer"
          }
        },
        "required": [
          "link",
          "total_advanced_credit",
          "total_basic_credit"
        ]
      },
      "SearchAndRecolorImage": {
        "type": "object",
        "description": "fields = ('prompt', 'image', 'output_format')",
        "properties": {
          "image": {
            "type": "string",
            "format": "uri"
          },
          "prompt": {
            "type": "string"
          },
          "output_format": {
            "type": "string"
          },
          "select_prompt": {
            "type": "string"
          }
        },
        "required": [
          "image",
          "output_format",
          "prompt",
          "select_prompt"
        ]
      },
      "SearchAndReplaceImage": {
        "type": "object",
        "description": "fields = ('prompt', 'image', 'output_format')",
        "properties": {
          "image": {
            "type": "string",
            "format": "uri"
          },
          "prompt": {
            "type": "string"
          },
          "output_format": {
            "type": "string"
          },
          "search_prompt": {
            "type": "string"
          }
        },
        "required": [
          "image",
          "output_format",
          "prompt",
          "search_prompt"
        ]
      },
      "Service": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "logo": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "display_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "credit_type": {
            "type": "string",
            "readOnly": true
          },
          "amount": {
            "type": "integer",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "category": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceCategory"
            }
          }
        },
        "required": [
          "amount",
          "category",
          "credit_type",
          "id",
          "name",
          "tags",
          "uuid"
        ]
      },
      "ServiceCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Category name",
            "maxLength": 255
          },
          "name_fa": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "SimpleTool": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "is_active": {
            "type": "boolean"
          }
        },
        "required": [
          "category",
          "uuid"
        ]
      },
      "SimpleUserServiceHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/StatusEnum"
          }
        },
        "required": [
          "id"
        ]
      },
      "SingleCrawl": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "sub_url": {
            "type": "string",
            "format": "uri",
            "maxLength": 400
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "file": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "file",
          "id",
          "sub_url",
          "updated_at",
          "uuid"
        ]
      },
      "SingleFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "file_type": {
            "$ref": "#/components/schemas/FileTypeEnum"
          },
          "file": {
            "type": "string",
            "format": "uri"
          },
          "file_size": {
            "type": "string",
            "readOnly": true
          },
          "project": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Project"
              }
            ],
            "readOnly": true
          },
          "directory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Directory"
              }
            ],
            "readOnly": true
          },
          "directory_id": {
            "type": "integer",
            "writeOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "directory",
          "file",
          "file_size",
          "file_type",
          "id",
          "name",
          "project",
          "updated_at",
          "uuid"
        ]
      },
      "SingleIntegration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "$ref": "#/components/schemas/NameEnum"
          },
          "agent_id": {
            "type": "integer",
            "writeOnly": true
          },
          "api_link": {
            "type": "string",
            "readOnly": true
          },
          "apikey": {
            "type": "string",
            "readOnly": true
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "agent_id",
          "api_link",
          "apikey",
          "config",
          "id",
          "name"
        ]
      },
      "SingleProject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "_crawls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SingleCrawl"
            },
            "readOnly": true,
            "default": [],
            "title": " crawls"
          },
          "description_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File"
            },
            "readOnly": true
          },
          "general_info": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "_crawls",
          "created_at",
          "description_files",
          "general_info",
          "id",
          "name",
          "updated_at"
        ]
      },
      "SingleRag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "llm_provider": {
            "type": "string",
            "format": "uuid"
          },
          "tools": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "project": {
            "type": "integer",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "about_project": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          },
          "tone_of_voice": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "opener": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Opener"
              }
            ],
            "writeOnly": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "id",
          "name",
          "status",
          "updated_at"
        ]
      },
      "SingleTransaction": {
        "type": "object",
        "properties": {
          "payment_method": {
            "type": "string"
          },
          "transaction_type": {
            "$ref": "#/components/schemas/TransactionTypeEnum"
          },
          "plan_name": {
            "type": "string"
          },
          "promotion_code": {
            "type": "string"
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
          }
        },
        "required": [
          "payment_method",
          "plan_name",
          "transaction_type"
        ]
      },
      "SopsAndDocs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "crawls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrawlParent"
            },
            "readOnly": true,
            "default": []
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File"
            },
            "readOnly": true
          }
        },
        "required": [
          "crawls",
          "created_at",
          "files",
          "id",
          "name",
          "updated_at"
        ]
      },
      "StartLogin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "utm_source": {
            "type": "string"
          },
          "utm_medium": {
            "type": "string"
          },
          "referral_code": {
            "type": "string"
          },
          "g_recaptcha_response": {
            "type": "string"
          }
        },
        "required": [
          "username"
        ]
      },
      "StatusEnum": {
        "enum": [
          "created",
          "pending",
          "completed",
          "failed"
        ],
        "type": "string",
        "description": "* `created` - Created\n* `pending` - Pending\n* `completed` - Completed\n* `failed` - Failed"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "name_fa": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "slug": {
            "type": "string",
            "pattern": "^[-\\w]+$",
            "maxLength": 100
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "TextToAudio": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        },
        "required": [
          "message_id",
          "text"
        ]
      },
      "Tool": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "readOnly": true
          },
          "display_name": {
            "type": "string",
            "readOnly": true,
            "description": "For displaying in the frontend"
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToolCategory"
            }
          },
          "is_active": {
            "type": "boolean",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "is_allowed": {
            "type": "boolean",
            "readOnly": true
          },
          "credit_type": {
            "type": "string",
            "readOnly": true
          },
          "amount": {
            "type": "integer",
            "readOnly": true
          }
        },
        "required": [
          "amount",
          "categories",
          "credit_type",
          "description",
          "display_name",
          "id",
          "is_active",
          "is_allowed",
          "logo",
          "uuid"
        ]
      },
      "ToolCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "TransactionTypeEnum": {
        "enum": [
          "withdrawal",
          "deposit",
          "referral"
        ],
        "type": "string",
        "description": "* `withdrawal` - withdrawal\n* `deposit` - deposit\n* `referral` - referral"
      },
      "TypeEnum": {
        "enum": [
          "agent",
          "workflow"
        ],
        "type": "string",
        "description": "* `agent` - Agent\n* `workflow` - Workflow"
      },
      "UserServiceHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "model_version": {
            "type": "integer"
          },
          "prompt": {
            "type": "string"
          },
          "input_file": {
            "type": "string",
            "format": "uri"
          },
          "output_file": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "schema": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusEnum"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "id",
          "model_version",
          "prompt",
          "schema",
          "status"
        ]
      },
      "UserSubscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "plan_name": {
            "type": "string"
          },
          "fa_name": {
            "type": "string"
          },
          "plan_type": {
            "type": "string"
          },
          "expired": {
            "type": "boolean"
          },
          "is_reserved": {
            "type": "boolean"
          },
          "remaining_days": {
            "type": "string",
            "readOnly": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "total_basic_credit": {
            "type": "integer"
          },
          "total_advanced_credit": {
            "type": "integer"
          },
          "remain_basic_credit": {
            "type": "string",
            "readOnly": true
          },
          "remain_advanced_credit": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "fa_name",
          "id",
          "plan_name",
          "plan_type",
          "remain_advanced_credit",
          "remain_basic_credit",
          "remaining_days",
          "start_date",
          "total_advanced_credit",
          "total_basic_credit"
        ]
      },
      "UsernameTypeEnum": {
        "enum": [
          "username",
          "email",
          "phone_number"
        ],
        "type": "string",
        "description": "* `username` - Username\n* `email` - Email\n* `phone_number` - Phone Number"
      },
      "Verify": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        },
        "required": [
          "code"
        ]
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "houshyar_balance": {
            "type": "string",
            "readOnly": true
          },
          "basic_credit": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "advanced_credit": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "basic_referral_credit": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "advanced_referral_credit": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          }
        },
        "required": [
          "houshyar_balance"
        ]
      },
      "WorkflowDraft": {
        "type": "object",
        "properties": {
          "graph": {
            "$ref": "#/components/schemas/Graph"
          },
          "features": {
            "type": "object",
            "additionalProperties": {}
          },
          "environment_variables": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "conversation_variables": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "hash": {
            "type": "string"
          }
        },
        "required": [
          "features",
          "graph"
        ]
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "JWT %YourJWT"
      },
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionid"
      },
      "jwtAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Token-based authentication with required prefix \"JWT\""
      }
    }
  }
}